'fileTypes': [
  'oz'
]
'foldingStartMarker': '/\\*\\*|\\{\\s*$'
'foldingStopMarker': '\\*\\*/|^\\s*\\}'
'name': 'Oz'
'patterns': [
  {
    'match': '(%).*$\\n?'
    'name': 'comment.line.percentage.oz'
  }
  {
    'begin': '/\\*'
    'end': '\\*/'
    'name': 'comment.block.documentation.oz'
  }
  {
    'match': '\\b(andthen|at|attr|case|catch|class|choice|cond|declare|define|do|dis|if|else|elsecase|elseif|end|export|feat|finally|for|from|fun|functor|\n                if|in|import|lex|local|lock|meth|mode|not|of|or|orelse|parser|prepare|proc|prod|prop|raise|require|scanner|skip|suchthat|syn|then|thread|token|try)\\b|^\\s*\\[\\]'
    'name': 'keyword.control.oz'
  }
  {
    'match': '=|:='
    'name': 'keyword.operator.assignement.oz'
  }
  {
    'match': '<|=<|==|\\\\=|>=|>'
    'name': 'keyword.operator.comparison.oz'
  }
  {
    'match': '(\\*|\\+|\\-|/|~)|\\b(div|mod)\\b'
    'name': 'keyword.operator.arithmetic.oz'
  }
  {
    'match': '\\b(\\d+)\\b'
    'name': 'constant.numeric.oz'
  }
  {
    'match': '\\b(nil|true|false)\\b'
    'name': 'constant.language.oz'
  }
  {
    'match': '\\b\\|\\b'
    'name': 'keyword.operator.list.oz'
  }
  {
    'captures':
      '1':
        'name': 'keyword.control.proc.oz'
      '2':
        'name': 'entity.name.function.oz'
      '3':
        'name': 'variable.parameter.function.oz'
    'match': '\\b(fun|proc)\\b\\s+\\{(\\w+)((?:\\s\\w+)*)\\}'
    'name': 'meta.function.oz'
  }
  {
    'match': '\\[|\\]'
    'name': 'punctuation.section.array.oz'
  }
  {
    'begin': '\''
    'end': '\''
    'name': 'string.quoted.simple.oz'
    'patterns': [
      {
        'match': '\\\\.'
        'name': 'constant.character.escape.oz'
      }
    ]
  }
  {
    'match': '(@)[A-Z]\\w*'
    'name': 'variable.other.readwrite.cell.oz'
  }
]
'scopeName': 'source.oz'
